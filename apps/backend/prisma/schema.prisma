generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  name        String
  email       String   @unique
  image       String?
  passwordHash String
  createdAt   DateTime @default(now())
  memberships GroupMember[]
  expensesPaid Expense[] @relation("PaidBy")
  splits      ExpenseSplit[]
  settlementsFrom Settlement[] @relation("SettlementsFrom")
  settlementsTo   Settlement[] @relation("SettlementsTo")
}

model Group {
  id        String   @id @default(cuid())
  name      String
  currency  String   // e.g., "USD"
  createdBy String
  createdAt DateTime @default(now())
  members   GroupMember[]
  expenses  Expense[]
  settlements Settlement[]
}

model GroupMember {
  id        String  @id @default(cuid())
  group     Group   @relation(fields: [groupId], references: [id])
  groupId   String
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  role      String  // 'owner' | 'member'
  joinedAt  DateTime @default(now())
  @@unique([groupId, userId])
}

model Expense {
  id         String   @id @default(cuid())
  group      Group    @relation(fields: [groupId], references: [id])
  groupId    String
  paidBy     User     @relation("PaidBy", fields: [paidById], references: [id])
  paidById   String
  amountCents Int
  currency   String
  date       DateTime
  category   String?
  note       String?
  receiptId  String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  splits     ExpenseSplit[]
}

model ExpenseSplit {
  id         String  @id @default(cuid())
  expense    Expense @relation(fields: [expenseId], references: [id])
  expenseId  String
  user       User    @relation(fields: [userId], references: [id])
  userId     String
  amountCents Int
  @@unique([expenseId, userId])
}

model Settlement {
  id          String  @id @default(cuid())
  group       Group   @relation(fields: [groupId], references: [id])
  groupId     String
  fromUser    User    @relation("SettlementsFrom", fields: [fromUserId], references: [id])
  fromUserId  String
  toUser      User    @relation("SettlementsTo", fields: [toUserId], references: [id])
  toUserId    String
  amountCents Int
  currency    String
  date        DateTime
  note        String?
  method      String?  // 'cash' | 'venmo' | 'paypal' | etc
  createdAt   DateTime @default(now())
}

model FxRate {
  id        String   @id @default(cuid())
  date      DateTime
  baseCcy   String
  quoteCcy  String
  rate      Float
  @@unique([date, baseCcy, quoteCcy])
}